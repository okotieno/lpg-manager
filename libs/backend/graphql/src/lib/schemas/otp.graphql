type OtpModel {
  id: UUID!
  name: String!
}

input CreateOtpInput {
  name: String
}

input UpdateOtpInput {
  name: String
}

type PaginatedOtp {
  items: [OtpModel]
  meta: Pagination
}

type CreateOtpSuccessResponse {
  message: String!
  data: OtpModel!
}

extend type Query {
  otps(query: QueryParams): PaginatedOtp!
  otp(id: UUID!): OtpModel
}

extend type Mutation {
  updateOtp(id: UUID!, params: UpdateOtpInput): CreateOtpSuccessResponse

  createOtp(name: String!): CreateOtpSuccessResponse

  deleteOtp(id: UUID!): DeleteSuccessResponse!
}
