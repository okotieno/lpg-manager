fragment dispatchDriverFragment on DriverModel {
  id
  user {
    id
    firstName
    lastName
  }
}
fragment dealerDispatchFragment on OrderModel {
  dealer {
    id
    name
  }

}
mutation CreateDispatch($params: CreateDispatchInput!) {
  createDispatch(params: $params) {
    message
    data {
      id
      status
      dispatchDate
      transporterId
      driverId
      vehicleId
      transporter {
        id
        name
      }
      driver {
        ...dispatchDriverFragment
      }
      vehicle {
        id
        registrationNumber
      }
      consolidatedOrders {
        id
        orders {
          id
          status
          totalPrice
        }
      }
      createdAt
      updatedAt
    }
  }
}

query GetDispatchById($id: UUID! $includeDealer: Boolean = false) {
  dispatch(id: $id) {
    id
    status
    dispatchDate
    transporterId
    driverId
    vehicleId
    transporter {
      id
      name
    }
    driver {
      ...dispatchDriverFragment
    }
    vehicle {
      id
      registrationNumber
    }
    consolidatedOrders {
      id
      orders {
        id
        status
        totalPrice
        ...dealerDispatchFragment @include(if: $includeDealer)
        items {
          id
          quantity
          catalogue {
            id
            name
            unit
            quantityPerUnit
          }
        }
      }
    }
    createdAt
    updatedAt
  }
}

query GetDispatches($query: QueryParams) {
  dispatches(query: $query) {
    items {
      id
      status
      dispatchDate
      transporterId
      driverId
      vehicleId
      transporter {
        id
        name
      }
      driver {
        ...dispatchDriverFragment
      }
      vehicle {
        id
        registrationNumber
      }
      consolidatedOrders {
        id
        orders {
          id
          status
          totalPrice
        }
      }
      createdAt
      updatedAt
    }
    meta {
      totalItems
    }
  }
}

mutation DeleteDispatchById($id: UUID!) {
  deleteDispatch(id: $id) {
    message
  }
}

mutation UpdateDispatch($id: UUID!, $params: UpdateDispatchInput!) {
  updateDispatch(id: $id, params: $params) {
    message
    data {
      id
      status
      dispatchDate
      transporterId
      driverId
      vehicleId
      transporter {
        id
        name
      }
      driver {
        ...dispatchDriverFragment
      }
      vehicle {
        id
        registrationNumber
      }
      consolidatedOrders {
        id
        orders {
          id
          status
          totalPrice
        }
      }
      createdAt
      updatedAt
    }
  }
}

mutation ScanConfirm($params: ScanConfirmInput!) {
  scanConfirm(params: $params) {
    message
    data {
      id
      status
      depotToDriverConfirmedAt
      dispatchDate
      transporter {
        id
        name
      }
      driver {
        ...dispatchDriverFragment
      }
      vehicle {
        id
        registrationNumber
      }
      consolidatedOrders {
        id
        orders {
          id
          status
          totalPrice
        }
      }
    }
  }
}

